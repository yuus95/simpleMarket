language: java
jdk:
- openjdk11
branches:
  only:
  - main
cache:
  directories:
  - "$HOME/.m2/repository"
  - "$HOME/.gradle"
script: "./gradlew clean build"

before_install:
  - openssl aes-256-cbc -K $encrypted_dd868b5a6e58_key -iv $encrypted_dd868b5a6e58_iv -in application-dev.yml.enc -out application-dev.yml -d
  - chmod +x gradlew

# Travis Ci는 S3로 특정 파일만 업로드가 안된다. 디렉토리 단위로 업로드 가능
before_deploy:
  # 현재 위치의 모든 파일을 springboot-test 압축한다.

  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp script/*.sh before-deploy # 배포 스크립트 이동
  - cp appspec.yml before-deploy # codedeploy파일 이동
  - cd before-deploy && zip -r before-deploy.zip # zip 으로 압축
  - cd ../ && mkdir -p deploy
  - mv before-deploy/before-deploy.zip deploy/springboot-test.zip # deploy 폴더로 이동

  # 생성한 .zip 파일을 deploy 아래로 이동한다
  - mv springboot-test.zip deploy/springboot-test.zip

deploy:
  #s3설정
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    #s3 버킷 이름
    bucket: yushin09
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리로 이동한다. 해당 위치의 파일만 이동시킨다.
    wait-unil-deployed: true
    on:
      branch: main

#  codedeploy설정
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: yushin09
    key: springboot-test.zip
    bundle_type: zip
    application: ec2-codedeploy # aws code_deploy 애플리케이션 이름
    deployment_group: code-deploy # code_deploy 의 배포그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      branch: main



notifications:
  email:
    recipients:
    - kkad45@naver.com
